#!/bin/bash

switch_to_branch() {
  local BRANCH=$1

  git checkout -b $BRANCH
  git pull origin $BRANCH
}

replace_files_with() {
  local VERSION=$1
  
  sed -i -E "s:\(@angular/cli@\).*\(\s*\\\\\):\1$VERSION \2:" Dockerfile
  sed -i -E "s/\(@angular\/cli:\*\*\).*\(<br\/>\)/\1 $VERSION\2/" README.md
  sed -i -E "s/\(alexsuch\/angular-cli:\).*\(ng\)/\1$VERSION \2/" README.md
}

build_docker() {
  docker build -t alexsuch/angular-cli:$1 .
  return $?
}

on_success() {
  local VERSION=$1
  local DEFAULT_MSG="Update CLI version to $1"

  clear
  echo "Success!"
  echo "Sending changes to github"
  echo "Default message will be '$DEFAULT_MSG'"
  read -p "Write your message (Hit ENTER for default message): " COMMIT_MSG

  if [[ -z "$COMMIT_MSG" ]]; then
    COMMIT_MSG=$DEFAULT_MSG
  fi

  echo "Committing files"
  git add Dockerfile README.md
  git commit -m "$COMMIT_MSG"
  git tag -a $VERSION -m "version $VERSION"

  echo "Pushing to Github"
  git push origin master
  git push origin $VERSION

  echo "Generating release $VERSION"
  curl --data "{\"tag_name\": \"$VERSION\",
              \"target_commitish\": \"master\",
              \"name\": \"v$VERSION\",
              \"body\": \"Release of version $VERSION\",
              \"draft\": false,
              \"prerelease\": false}" \
  https://api.github.com/repos/alejandroSuch/angular-cli/releases?access_token=$GITHUB_ACCESS_TOKEN

  echo "Success!"
}

on_error() {
  clear
  echo "Docker build failed!"
}

if [ $# -eq 0 ]
  then
    echo "Version is required"
    exit 1;
fi

VERSION=$1

if [[ $VERSION == 1.3.* ]]; then
  switch_to_branch "1.3.x"
else 
  switch_to_branch "master"
fi

replace_files_with $VERSION
build_docker $VERSION
DOCKER_BUILD_RESULT=$?

if [ $DOCKER_BUILD_RESULT -eq 0 ]; then
  on_success $VERSION
else
  on_error
fi

switch_to_branch "master"
